name: GitHub Classroom Workflow

on: [push, pull_request]
    
jobs:
  build:
    name: Autograding
    runs-on: macos-latest
    steps:
      - uses: bazelbuild/setup-bazelisk@v2
      - uses: actions/checkout@v2  
      - uses: actions/checkout@master
        with:
            repository: 'ee538/Summer22_HW2_CodingGrader'
            path: 'coding_grader'

      - name: Checkout code
        env:
            questions: 1 2 3 4 5 7 8
        run: |
             for f in $questions; do cp files/${f}/{q.cc,q.h} coding_grader/${f}; done
             
      - name: Test Q1
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/1:student_test 2>&1 | tee ST_Q1res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/1:grader_test 2>&1 | tee Q1res.txt
             
      - name: Test Q2
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/2:student_test 2>&1 | tee ST_Q2res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/2:grader_test 2>&1 | tee Q2res.txt
             
      - name: Test Q3
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/3:student_test 2>&1 | tee ST_Q3res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/3:grader_test 2>&1 | tee Q3res.txt

      - name: Test Q4
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/4:student_test 2>&1 | tee ST_Q4res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/4:grader_test 2>&1 | tee Q4res.txt

      - name: Test Q5
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/5:grader_test 2>&1 | tee Q5res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/5:student_test 2>&1 | tee ST_Q5res.txt

      - name: Test Q7
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/7:student_test 2>&1 | tee ST_Q7res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/7:grader_test 2>&1 | tee Q7res.txt

      - name: Test Q8
        run: |
             echo "--------- student test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //files/8:student_test 2>&1 | tee ST_Q8res.txt
             echo "--------- grader test ---------"
             bazel run --ui_event_filters=-info,-stdout,-stderr //coding_grader/8:grader_test 2>&1 | tee Q8res.txt
      
      - name: Organize the total score (coding questions)
        run: |
             rm -rf grades
             rm -rf ScoresCodingTotal.txt
             mkdir grades
             mv Q*res.txt grades
             
             grep "PASSED" grades/Q*res.txt > grades/TestsCoding.txt
            
             python coding_grader/coding_grades_total.py 2>&1 | tee ScoresCodingTotal.txt

             # clean temporary files
             rm -rf grades
             rm -rf ST_*
             rm -rf coding_grader

             git add ScoresCodingTotal.txt
             
             if [ -n "$(git status --porcelain)" ]; then
                git commit -m "Add autograding results"
                git push origin HEAD:main
             fi
